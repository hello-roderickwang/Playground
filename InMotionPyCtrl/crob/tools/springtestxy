#! /usr/bin/tclsh

source $::env(CROB_HOME)/shm.tcl

set ob(is_cal) [is_robot_cal_done]

if {!$ob(is_cal)} {
    error "robot is not yet calibrated."
    exit
}

puts "loading robot process."

start_lkm
start_shm
start_loop

set ob(is_cal) [is_robot_cal_done]

if {!$ob(is_cal)} {
    error "robot is not yet calibrated."
    exit
}

# exec $::env(CROB_HOME)/tools/display &

wshm safety_pos 5.0

wshm logfnid 18
set ob(nlog) 5

proc spring_force {axis xref yref stiff stime} {
    global ob

    puts "spring axis $axis xref $xref yref $yref stiff $stiff"
    wshm stiff $stiff
    wshm damp 0.0
    # using ref_pos, not these boxes
    movebox 0 26 {0 1 0} {0 0 0 0} {0 0 0 0} 
}

proc spring_log {axis xref yref stiff stime} {
    global ob
    set logfile /tmp/stxy.$axis.$stime.dat
    start_log $logfile $ob(nlog)
}

set stime [clock format [clock seconds] -format %y%m%d_%H%M%S_%a]

puts ""

set mode "both"

puts "Test 1: Move handle to set $mode point."
puts ""
puts "Hit Enter for $mode motor force."

gets stdin
set ref_pos_x [rshm x]
set ref_pos_y [rshm y]
wshm ref_pos_x $ref_pos_x
wshm ref_pos_y $ref_pos_y

spring_force b $ref_pos_x $ref_pos_y 100.0 $stime
puts ""

puts "Displace $mode link, measure and record spring force with gauge,"
puts "checking displacement with display software."
puts ""
puts "Then type an amplitude value between 0.0 and 5.0."
puts "Then hit Enter to start vibration and logging."
set amp [gets stdin]
if {$amp == ""} {set amp 0.0}
if {![string is double $amp]} {set amp 0.0}
puts "amp is: $amp"
wshm tvibamp $amp

spring_log b ref_pos_x ref_pos_y 40.0 $stime

puts "Hit Enter to stop vibration and logging."
gets stdin

stop_log
wshm tvibamp 0.0

puts "Hit Enter to show plot."
puts "(Quit from plot with q.)"

gets stdin

set axis b

catch {exec $::env(CROB_HOME)/tools/gplot /tmp/stxy.$axis.$stime.dat 0 4 0 5 0 2 0 3}

puts "Hit Enter to exit."
gets stdin

puts "Writing files..."

    puts "/tmp/stxy.$axis.$stime.asc"
    exec $::env(CROB_HOME)/ta.tcl /tmp/stxy.$axis.$stime.dat > /tmp/stxy.$axis.$stime.asc
    file delete /tmp/stxy.$axis.$stime.dat

puts "1: index"
puts "2: x disp m"
puts "3: y disp m"
puts "4: x vibe N"
puts "5: y vibe N"

puts "unloading robot process."
# catch {exec pkill display}
stop_loop
stop_shm
stop_lkm

puts "done."
