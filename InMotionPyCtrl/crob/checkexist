#!/bin/bash
# check for the existence of components
# also check for root access.
# (prerequisites for running robot code)

# this should be called at program startup time from user mode apps.
# it's called by go, which is called by shm.tcl:start_lkm.
# if you're not calling go, then call this yourself.

# InMotion2 robot system software

# Copyright 2003-2013 Interactive Motion Technologies, Inc.
# Watertown, MA, USA
# http://www.interactive-motion.com
# All rights reserved

if [[ -z "$CROB_HOME" ]]; then
    echo "CROB_HOME is not set."
    exit 1
fi

zmsg() {
    $CROB_HOME/tools/zenity_wrap "$@"
}

PERSONALITY=$(cat /opt/imt/personality)

if [[ $PERSONALITY == ce ]]; then
    if [[ -e $IMT_CONFIG/have_plc && -e $IMT_CONFIG/have_no_plc ]]; then
	zmsg "You may not have both have_plc and have_no_plc" --error
	exit 1
    fi

    if [[ ! -e $IMT_CONFIG/have_plc && ! -e $IMT_CONFIG/have_no_plc ]]; then
	zmsg "You must have either have_plc or have_no_plc" --error
	exit 1
    fi

    if [[ ! -h /opt/imt/.pci4e_resource0 ]]; then
	zmsg "The pci4e resource0 file has not been created." --error
	exit 1
    fi

    if [[ ! -r /proc/pwrdaq ]]; then
	zmsg "The pwrdaq driver is not loaded." --error
	exit 1
    fi
fi

# check that we have an IMT kernel
if ! uname -a | grep -E -q "interactive-motion|imt"; then
    zmsg "The Linux kernel currently booted is not correct for Xenomai." --error
    uname -a
    exit 1
fi

# /opt/imt/robot must be a directory symlink and not a directory itself.
# we check for existence of files in it later.
# we check for literal /opt/imt/robot and not ROBOT_HOME,
# because researchers can mess with ROBOT_HOME
# but the literal directory is what clinical customers will use.

if [[ ! -h /opt/imt/robot || ! -d /opt/imt/robot ]]; then
    zmsg "checkexist: /opt/imt/robot must be a symbolic link to a directory." --error
    exit 1
fi

dlist="
CROB_HOME
LGAMES_HOME
I18N_HOME
PROTOCOLS_HOME
THERAPIST_HOME
IMT_CONFIG
"

# if Private is not present, it has not been mounted.

if [ -e $HOME/Private/Access-Your-Private-Data.desktop ]; then
    zmsg "ecryptfs-mount-private error.
The encrypted therapist folder is not mounted.
If rebooting doesn't fix the problem, contact IMT support." --error
    exit 1
fi

# what about LOG_HOME?

for i in $dlist; do
    # indirection
    dir=${!i}
    if [[ -z $dir ]]; then
	zmsg "checkexist: shell environment variable $i must be set." --error
	exit 1
    fi
    if [[ ! -d $dir ]]; then
	zmsg "checkexist: shell environment variable $i directory $dir does not exist." --error
	exit 1
    fi
done

flist="
    $CROB_HOME/rtcansendmulti
    $CROB_HOME/robot
    $CROB_HOME/atinetft
    $ROBOT_HOME/mcc/c/mccd
    $CROB_HOME/shm
    $IMT_CONFIG/robots/$(cat $IMT_CONFIG/current_robot)/imt2.cal
    $ROBOT_HOME/lib/imt.gif
"

for i in $flist; do
    if [[ ! -e $i ]]; then
	zmsg "checkexist: $i not found" --error
	exit 1
    fi
done

# is there enough disk space?
# check therapist, log, and var

# the df/sed/cut call scrapes the Available blocks data from the output

# Filesystem           1K-blocks      Used Available Use% Mounted on
# /dev/sda2             24027656   7464332  15342788  33% /home

for dir in $THERAPIST_HOME $LOG_HOME
do
    if [[ ! -e $dir ]]; then
	continue
    fi

    size=$(df $dir | sed -n '2s/  */ /gp' | cut -d' ' -f4)
    # 100 mb exit
    if (( size < 100000 )); then
	zmsg "checkexist: $dir filesystem is full ($size blocks), please delete files." --error
	exit 1
    fi

    # 1 Gb warn
    if (( size < 1000000 )); then
	zmsg "checkexist: $dir filesystem is full ($size blocks), please delete files." --warning
    fi
done

dir=/var
size=$(df $dir | sed -n '2s/  */ /gp' | cut -d' ' -f4)
# 50Mb exit
if (( size < 50000 )); then
    zmsg "checkexist: $dir filesystem is full ($size blocks), please delete files." --error
    exit 1
fi

# 100 Mb warn
if (( size < 100000 )); then
    zmsg "checkexist: $dir filesystem is full ($size blocks), please delete files." --warning
fi

exit 0
